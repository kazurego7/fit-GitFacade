# 手動実行による vscode extension デプロイのワークフロー

name: Manual workflow

# 手動実行でのワークフロー実行
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      deploy:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'update version number (major, minor, patch)'
        # Default value if no value is explicitly provided
        default: 'patch'
        # Input has to be provided for the workflow to run
        required: true

# デフォルトの設定
defaults:
  run:
    shell: bash
    working-directory: project

# ジョブの設定
jobs:
  # npm version での更新、vsix のデプロイ、を行う
  deploy:
    runs-on: ubuntu-latest
    steps:
    # npm version での更新
    - name: setup checkout
      uses: actions/checkout@v2
    - name: setup node
      uses: actions/setup-node@v2
    - name: npm version up
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git checkout main
        echo "FIT_VERSION=`npm version ${{ github.event.inputs.deploy }}`" >> $GITHUB_ENV
        echo "${{ env.FIT_VERSION }}"
        git add -A
        git commit -m "${{ env.FIT_VERSION }}"
        git tag "${{ env.FIT_VERSION }}"
        git push origin main
        git push origin --tags
    # npm global tools の PATH の追加
    - name: add npm global tools path
      run: |
        echo "/home/runner/.npm-global/lib/node_modules/vsce/out" >> $GITHUB_PATH
    # vsix のビルド
    - name: build vsix
      env:
        NPM_CONFIG_PREFIX: "~/.npm-global"
      run: |
        npm ci
        npm install --global vsce
        vsce package
    # vsix のパスを環境変数に登録
    - name: set vsix path to env
      run: |
        echo "::set-output name=VSIX_FILE::`ls *.vsix`"
      id: vsix-path
    # vsix をアーティファクトとして登録
    - name: upload as artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ steps.vsix-path.outputs.VSIX_FILE }}
        path: ${{ github.workspace }}/${{ steps.vsix-path.outputs.VSIX_FILE }}
    # vsix のデプロイ
    - name: vsce publish for container
      run: |
        vsce publish --pat ${{ secrets.VSCE_TOKEN }}
